{"version":3,"sources":["SearchBar.js","ProductCategoryRow.js","ProductRow.js","ProductTable.js","FilterableProductTable.js","App.js","index.js"],"names":["SearchBar","props","filterText","inStockOnly","type","placeholder","value","onChange","event","onFilterTextChange","target","name","checked","onInStockOnlyChange","htmlFor","ProductCategoryRow","colSpan","category","ProductRow","price","ProductTable","array","filteredProducts","products","filter","product","includes","stocked","categories","map","p","Set","rows","productsInCategory","length","push","FilterableProductTable","useState","setFilterText","setInStockOnly","App","ReactDOM","render","document","getElementById"],"mappings":"qKA8BeA,EA9BG,SAACC,GAEjB,IAQMC,EAAaD,EAAMC,WACnBC,EAAcF,EAAME,YAE1B,OACE,iCACE,uBACEC,KAAK,OACLC,YAAY,YACZC,MAAOJ,EACPK,SAjByB,SAACC,GAC9BP,EAAMQ,mBAAmBD,EAAME,OAAOJ,UAiBpC,uBACEK,KAAK,cACLP,KAAK,WACLQ,QAAST,EACTI,SAlB0B,SAACC,GAC/BP,EAAMY,oBAAoBL,EAAME,OAAOE,YAkBrC,uBAAOE,QAAQ,cAAf,6C,cCjBSC,EARY,SAACd,GAC1B,OACE,6BACE,oBAAIe,QAAS,EAAb,SAAiBf,EAAMgB,cCMdC,EATI,SAACjB,GAClB,OACE,+BACE,6BAAKA,EAAMU,OACX,6BAAKV,EAAMkB,YC4DFC,EAxDM,SAACnB,GAEpB,IANgBoB,EAIc,EAKxBC,EAHWrB,EAAMsB,SAGWC,QAAO,SAAAC,GACvC,QAAKA,EAAQd,KAAKe,SAASzB,EAAMC,eAG7BD,EAAME,cAAgBsB,EAAQE,YAM9BC,GAnBUP,EAmBYC,EAAiBO,KAAI,SAAAC,GAAC,OAAIA,EAAEb,YAlBjD,YAAI,IAAIc,IAAIV,KAqBbW,EAAO,GAlBiB,cAmBTJ,GAnBS,yBAmBrBX,EAnBqB,QAqBtBgB,EAAqBX,EAAiBE,QAAO,SAAAC,GAAO,OACxDA,EAAQR,WAAaA,KAEnBgB,EAAmBC,OAAS,GAC9BF,EAAKG,KACH,cAAC,EAAD,CAEElB,SAAUA,GADLA,IA3BiB,oBA+BRgB,GA/BQ,IA+B5B,2BAAwC,CAAC,IAAhCR,EAA+B,QACtCO,EAAKG,KACH,cAAC,EAAD,CAEExB,KAAMc,EAAQd,KACdQ,MAAOM,EAAQN,OAFVM,EAAQd,QAlCS,gCAmB9B,2BAAkC,IAnBJ,8BAyC9B,OACE,kCACE,gCACE,+BACE,sCACA,4CAGJ,gCACGqB,QC1BMI,EA5BgB,SAACnC,GAE9B,MAAoCoC,mBAAS,IAA7C,mBAAOnC,EAAP,KAAmBoC,EAAnB,KACA,EAAsCD,oBAAS,GAA/C,mBAAOlC,EAAP,KAAoBoC,EAApB,KAUA,OACE,gCACE,cAAC,EAAD,CACErC,WAAYA,EACZC,YAAaA,EACbM,mBAbyB,SAACH,GAC9BgC,EAAchC,IAaVO,oBAV0B,SAACD,GAC/B2B,EAAe3B,MAUb,cAAC,EAAD,CACEW,SAAUtB,EAAMsB,SAChBrB,WAAYA,EACZC,YAAaA,QCnBNqC,EANH,SAACvC,GACX,OACE,cAAC,EAAD,CAAwBsB,SAAUtB,EAAMsB,YCuC5CkB,IAASC,OACP,cAAC,EAAD,CAAKnB,SAxCW,CAChB,CACEN,SAAU,iBACVE,MAAO,SACPQ,SAAS,EACThB,KAAM,YAER,CACEM,SAAU,iBACVE,MAAO,QACPQ,SAAS,EACThB,KAAM,YAER,CACEM,SAAU,iBACVE,MAAO,SACPQ,SAAS,EACThB,KAAM,cAER,CACEM,SAAU,cACVE,MAAO,SACPQ,SAAS,EACThB,KAAM,cAER,CACEM,SAAU,cACVE,MAAO,UACPQ,SAAS,EACThB,KAAM,YAER,CACEM,SAAU,cACVE,MAAO,UACPQ,SAAS,EACThB,KAAM,cAMRgC,SAASC,eAAe,W","file":"static/js/main.4206ad8f.chunk.js","sourcesContent":["const SearchBar = (props) => {\n\n  const handleFilterTextChange = (event) => {\n    props.onFilterTextChange(event.target.value);\n  }\n\n  const handleInStockOnlyChange = (event) => {\n    props.onInStockOnlyChange(event.target.checked);\n  }\n\n  const filterText = props.filterText;\n  const inStockOnly = props.inStockOnly;\n\n  return (\n    <form>\n      <input\n        type=\"text\"\n        placeholder=\"Search...\"\n        value={filterText}\n        onChange={handleFilterTextChange}/>\n      <input\n        name=\"stockFilter\"\n        type=\"checkbox\"\n        checked={inStockOnly}\n        onChange={handleInStockOnlyChange}/>\n      <label htmlFor=\"stockFilter\">Only show products in stock</label>\n    </form>\n  );\n}\n\nexport default SearchBar;\n","const ProductCategoryRow = (props) => {\n  return (\n    <tr>\n      <th colSpan={2}>{props.category}</th>\n    </tr>\n  );\n}\n\nexport default ProductCategoryRow;\n","const ProductRow = (props) => {\n  return (\n    <tr>\n      <td>{props.name}</td>\n      <td>{props.price}</td>\n    </tr>\n  );\n}\n\nexport default ProductRow;\n","import ProductCategoryRow from \"./ProductCategoryRow\";\nimport ProductRow from \"./ProductRow\";\n\n// Returns an Array containing only the distinct entries of `array`.\nconst distinct = (array) => {\n  return [...new Set(array)];\n}\n\nconst ProductTable = (props) => {\n\n  const products = props.products;\n\n  // Filter the products by the user input.\n  const filteredProducts = products.filter(product => {\n    if (!product.name.includes(props.filterText)) {\n      return false;\n    }\n    if (props.inStockOnly && !product.stocked) {\n      return false;\n    }\n    return true;\n  });\n\n  const categories = distinct(filteredProducts.map(p => p.category));\n\n  // Create the rows to go in the product table.\n  const rows = [];\n  for (let category of categories) {\n    // Group products by category.\n    const productsInCategory = filteredProducts.filter(product =>\n      product.category === category\n    );\n    if (productsInCategory.length > 0) {\n      rows.push(\n        <ProductCategoryRow\n          key={category}\n          category={category} />\n      );\n    }\n    for (let product of productsInCategory) {\n      rows.push(\n        <ProductRow\n          key={product.name}\n          name={product.name}\n          price={product.price} />\n      );\n    }\n  }\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Price</th>\n        </tr>\n      </thead>\n      <tbody>\n        {rows}\n      </tbody>\n    </table>\n  );\n}\n\nexport default ProductTable;\n","import React, { useState } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport ProductTable from \"./ProductTable\";\n\nconst FilterableProductTable = (props) => {\n\n  const [filterText, setFilterText] = useState(\"\");\n  const [inStockOnly, setInStockOnly] = useState(false);\n\n  const handleFilterTextChange = (value) => {\n    setFilterText(value);\n  }\n\n  const handleInStockOnlyChange = (checked) => {\n    setInStockOnly(checked);\n  }\n\n  return (\n    <div>\n      <SearchBar\n        filterText={filterText}\n        inStockOnly={inStockOnly}\n        onFilterTextChange={handleFilterTextChange}\n        onInStockOnlyChange={handleInStockOnlyChange}/>\n      <ProductTable\n        products={props.products}\n        filterText={filterText}\n        inStockOnly={inStockOnly} />\n    </div>\n  );\n}\n\nexport default FilterableProductTable;\n","import FilterableProductTable from \"./FilterableProductTable\";\n\nconst App = (props) => {\n  return (\n    <FilterableProductTable products={props.products} />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nlet productData = [\n  {\n    category: \"Sporting goods\",\n    price: \"$49.99\",\n    stocked: true,\n    name: \"Football\"\n  },\n  {\n    category: \"Sporting goods\",\n    price: \"$9.99\",\n    stocked: true,\n    name: \"Baseball\"\n  },\n  {\n    category: \"Sporting goods\",\n    price: \"$29.99\",\n    stocked: false,\n    name: \"Basketball\"\n  },\n  {\n    category: \"Electronics\",\n    price: \"$99.99\",\n    stocked: true,\n    name: \"iPod Touch\"\n  },\n  {\n    category: \"Electronics\",\n    price: \"$399.99\",\n    stocked: false,\n    name: \"iPhone 5\"\n  },\n  {\n    category: \"Electronics\",\n    price: \"$199.99\",\n    stocked: true,\n    name: \"Nexus 7\"\n  }\n];\n\nReactDOM.render(\n  <App products={productData} />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}